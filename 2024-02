大佬网站记录： https://learn.lianglianglee.com/

扩大自己的上下文，别局限在一个程序员的角色上。

"最后一公里"，提前设想当“代码都开发完”时，上线时会遇到什么问题。
前面思前想后，后面才能四平八稳
在动手做一件事之前，先推演一番

任务分解，减少颗粒度

问抖音号比问微信容易开口，现在问联系方式，貌似偏向于问抖音号，因为他是一个展示自己的地方，而微信偏向于私密

https://learn.lianglianglee.com/%E4%B8%93%E6%A0%8F/10x%E7%A8%8B%E5%BA%8F%E5%91%98%E5%B7%A5%E4%BD%9C%E6%B3%95/15%20%E4%B8%80%E8%B5%B7%E7%BB%83%E4%B9%A0%EF%BC%9A%E6%89%8B%E6%8A%8A%E6%89%8B%E5%B8%A6%E4%BD%A0%E5%88%86%E8%A7%A3%E4%BB%BB%E5%8A%A1.md

分布式系统 - 全局唯一ID实现方案
https://pdai.tech/md/arch/arch-z-id.html

毛选
https://github.com/weiyinfu/MaoZeDongAnthology/blob/master/src/000-%E4%B8%AD%E5%9B%BD%E7%A4%BE%E4%BC%9A%E5%90%84%E9%98%B6%E7%BA%A7%E7%9A%84%E5%88%86%E6%9E%90.md

读研分享
https://github.com/crisxuan/bestJavaer/blob/bbd6701e9084e3e0f0f131901ca44f0dfb1d6690/reader/interview-kaoyan.md


finally语句：
	1.不一定被执行：①在try之前异常报错；②在try之前return；③System.exit(0)退出虚拟机 ④ 极端场景四级或者断电
	2.会把try或catch中的返回值保留，再执行finally，等执行完再返回
	3.try里面的 return num() 方法 等同于 int i = num(); return i; 所以num方法会先执行
参考文档:https://blog.csdn.net/qq_39135287/article/details/78455525

sql执行顺序
from--where--group by--having--select--order by, 

pgsql，like和ilke索引：gist和gin

mysql:https://www.cnblogs.com/gered/p/13902916.html

一、定义
1.局部思维，大部分情况下都是依旧当前所掌握的信息作出的思考，那如何确定当前所掌握的信息里是否为“全局”？
2.短视思维，社会就像一个大的系统，因为想优化“喝酒所引起暴力事件和工伤”，所推出的“禁酒令”，反而引起了系统更大的bug，不仅是短视，也没有从多方便考虑
3.现象思维，也就是常说的头痛医头脚痛医脚，没有去治根
4.系统三要素：元素，连接，功能
5.涌现性，整体不等于部分之和,三个臭皮匠赛过诸葛亮，三个和尚没水喝，当组合在一起的元素如果目标不一致的话，那么效果就是相反的
6.非线性，功能或者是目标才是系统行为最关键的决定因素，一个元素改变或者替换，影响不了系统
7.动态性，千里之堤溃于蚁穴、失之毫厘谬之千里、蝴蝶效应

二、动态复杂
1.构建系统模型：对实际系统的抽象和归纳，为了解决所针对的问题（对现实的画像）
	构建原则：①相似性 ②明朗性 ③目的性
2.因果回路图：①动态，系统随着时间而变化的特性；②反馈，系统的非线性特征
3.因果链：①描述系统的结构,并不描述变量的行为 ②变量名需要有清晰的方向
4.因果回路图原则：①变量之间有因果关系 ②因果链有明确的极性
5.增强回路：如果因果链里极性都是正的，没有负的，也叫正反馈环
6.调节回路：负反馈环，否极泰来,物极必反,乐极生悲
7.时间延迟：例如猪周期
8.系统基模：用简单扼要的模型,来描述最常见的那些行为模式
